# fastlane_require 'fileutils'

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :unit_tests do

    # Create direcotry if it doesn't exist
    build_directory = "#{ENV['PWD']}/.build"
    unless File.directory?(build_directory)
      FileUtils.mkdir_p(build_directory)
    end
    reports_directory = "#{ENV['PWD']}/.reports"
    unless File.directory?(reports_directory)
      FileUtils.mkdir_p(reports_directory)
    end
    html_directory = "#{reports_directory}/html"
    unless File.directory?(html_directory)
      FileUtils.mkdir_p(html_directory)
    end
    xml_directory = "#{reports_directory}/xml"
    unless File.directory?(xml_directory)
      FileUtils.mkdir_p(xml_directory)
    end

    # Run tests
    cocoapods(try_repo_update_on_error: true)
    scan(workspace: 'HelloCodeCoverage.xcworkspace', scheme: 'HelloCodeCoverage', derived_data_path: build_directory)

    # Create code coverage reports
    slather(
      proj: "HelloCodeCoverage.xcodeproj",
      scheme: "HelloCodeCoverage",
      build_directory: build_directory,
      output_directory: html_directory,
      use_bundle_exec: true,
      html: true
    )
    slather(
      proj: "HelloCodeCoverage.xcodeproj",
      scheme: "HelloCodeCoverage",
      build_directory: build_directory,
      output_directory: xml_directory,
      use_bundle_exec: true,
      cobertura_xml: true
    )

    # Fetch S3 URL
    new_line = "\n"
    git_commmit = `git rev-parse HEAD`.delete!(new_line)
    upload_token = '1fa0a3d8-1cb5-4db7-bf43-896209e8151e'
    fetch_command = "curl -sX POST -H 'Accept: text/plain' \"https://codecov.io/upload/v4?commit=#{git_commmit}&service=bitrise&token=#{upload_token}\""

    result = `#{fetch_command}`.split(new_line)
    codecov_url = result[0]
    s3_url = result[1]

    # Upload to S3
    UI.message "Attemping to upload report to #{s3_url}"
    upload_command = "curl -fisX PUT --data-binary @#{xml_directory}/cobertura.xml -H 'Content-Type: text/plain' -H 'x-amz-acl: public-read' -H 'x-amz-storage-class: REDUCED_REDUNDANCY' \"#{s3_url}\""
    result = `#{upload_command}`
    UI.message "Report will be available at #{codecov_url} after processing"
  end
end
